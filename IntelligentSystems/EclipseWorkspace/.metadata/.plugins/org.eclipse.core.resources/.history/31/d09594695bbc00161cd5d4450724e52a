import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;

import jAudioFeatureExtractor.ACE.DataTypes.FeatureDefinition;
import jAudioFeatureExtractor.AudioFeatures.MFCC;
import jAudioFeatureExtractor.AudioFeatures.MagnitudeSpectrum;
import jAudioFeatureExtractor.jAudioTools.AudioSamples;

public class FeatureExtraction {
	
	public static void main(String[] args){
		
		final double SAMPLE_DURATION = 10.0d;
		
		if( args.length == 0 ){
			System.err.println( "Please supply the local path to audio files to train on" );
			System.exit(1);
		}
		// filter non .wav files
		
		//AudioSamples[] audioSamples = new AudioSamples[args.length - 1];
		for( int i = 0; i < args.length; i++ ){
			String uid = args[i].substring(0, args[i].length()-4);
			File inputFile = new File(args[i]);
			AudioSamples audioSample;
			double[][] samples;
			try{
				AudioInputStream inputStream = AudioSystem.getAudioInputStream(inputFile);
				audioSample = new AudioSamples(inputStream, uid, false);
				samples = audioSample.getSampleWindowsMixedDown(SAMPLE_DURATION);
			} catch(Exception e){
				audioSample = null;
				samples = null;
				e.printStackTrace();
				System.exit(2);
			}

			try{
				double sampleRate = audioSample.getSamplingRateAsDouble();
				for( double[] sample : samples ){
					MagnitudeSpectrum currMagSpec = new MagnitudeSpectrum();
					MFCC currMFCC = new MFCC();
					PrintWriter writer = new PrintWriter(uid+".csv", "UTF-8");
					double[][] mfccMagSpecPass = new double[1][];
					mfccMagSpecPass[0] = currMagSpec.extractFeature(sample, sampleRate, null);
					double[] mfccSamples = currMFCC.extractFeature(sample, sampleRate, mfccMagSpecPass);
					System.out.println(mfccSamples.length);
					for(double coef : mfccSamples){
						System.out.println(coef);
					}
					StringBuilder result = new StringBuilder();
				    for(double mfcc : mfccSamples ){
				        result.append(Double.toString(mfcc) + ",");
				    }
				    return result.length() > 0 ? : "";
				    writer.println(result.substring(0, result.length() - 1));
				    writer.println("The second line");
				    writer.close();
				}
			}catch(Exception e){
				e.printStackTrace();
				System.exit(3);
			}
		}
		
		
		
	}
	
}
